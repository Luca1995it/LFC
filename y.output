Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | stmt

    4 expr: VARIABLE
    5     | INTEGER
    6     | BOOL
    7     | REAL
    8     | expr '+' expr
    9     | expr '-' expr
   10     | expr '*' expr
   11     | expr '/' expr
   12     | '-' expr
   13     | expr '<' expr
   14     | expr '>' expr
   15     | expr GE expr
   16     | expr LE expr
   17     | expr NE expr
   18     | expr EQ expr
   19     | '(' expr ')'

   20 type: T_INT
   21     | T_BOOL
   22     | T_REAL

   23 stmt: expr ';'
   24     | '{' function '}'
   25     | ';'
   26     | PRINT expr ';'
   27     | VARIABLE '=' expr ';'
   28     | type VARIABLE ';'
   29     | WHILE '(' expr ')' stmt
   30     | IF '(' expr ')' stmt
   31     | IF '(' expr ')' stmt ELSE stmt


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 29 30 31
')' (41) 19 29 30 31
'*' (42) 10
'+' (43) 8
'-' (45) 9 12
'/' (47) 11
';' (59) 23 25 26 27 28
'<' (60) 13
'=' (61) 27
'>' (62) 14
'{' (123) 24
'}' (125) 24
error (256)
INTEGER (258) 5
BOOL (259) 6
VARIABLE (260) 4 27 28
T_INT (261) 20
T_REAL (262) 22
T_BOOL (263) 21
REAL (264) 7
WHILE (265) 29
IF (266) 30 31
PRINT (267) 26
IFX (268)
UMINUS (269)
ELSE (270) 31
NE (271) 17
EQ (272) 18
LE (273) 16
GE (274) 15


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
function (34)
    on left: 2 3, on right: 1 2 24
expr (35)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19,
    on right: 8 9 10 11 12 13 14 15 16 17 18 19 23 26 27 29 30 31
type (36)
    on left: 20 21 22, on right: 28
stmt (37)
    on left: 23 24 25 26 27 28 29 30 31, on right: 2 3 29 30 31


state 0

    0 $accept: . program $end

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 3
    T_INT     shift, and go to state 4
    T_REAL    shift, and go to state 5
    T_BOOL    shift, and go to state 6
    REAL      shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    ';'       shift, and go to state 13
    '{'       shift, and go to state 14

    program   go to state 15
    function  go to state 16
    expr      go to state 17
    type      go to state 18
    stmt      go to state 19


state 1

    5 expr: INTEGER .

    $default  reduce using rule 5 (expr)


state 2

    6 expr: BOOL .

    $default  reduce using rule 6 (expr)


state 3

    4 expr: VARIABLE .
   27 stmt: VARIABLE . '=' expr ';'

    '='  shift, and go to state 20

    $default  reduce using rule 4 (expr)


state 4

   20 type: T_INT .

    $default  reduce using rule 20 (type)


state 5

   22 type: T_REAL .

    $default  reduce using rule 22 (type)


state 6

   21 type: T_BOOL .

    $default  reduce using rule 21 (type)


state 7

    7 expr: REAL .

    $default  reduce using rule 7 (expr)


state 8

   29 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 21


state 9

   30 stmt: IF . '(' expr ')' stmt
   31     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 22


state 10

   26 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 24


state 11

   12 expr: '-' . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 25


state 12

   19 expr: '(' . expr ')'

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 26


state 13

   25 stmt: ';' .

    $default  reduce using rule 25 (stmt)


state 14

   24 stmt: '{' . function '}'

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 3
    T_INT     shift, and go to state 4
    T_REAL    shift, and go to state 5
    T_BOOL    shift, and go to state 6
    REAL      shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    ';'       shift, and go to state 13
    '{'       shift, and go to state 14

    function  go to state 27
    expr      go to state 17
    type      go to state 18
    stmt      go to state 19


state 15

    0 $accept: program . $end

    $end  shift, and go to state 28


state 16

    1 program: function .
    2 function: function . stmt

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 3
    T_INT     shift, and go to state 4
    T_REAL    shift, and go to state 5
    T_BOOL    shift, and go to state 6
    REAL      shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    ';'       shift, and go to state 13
    '{'       shift, and go to state 14

    $default  reduce using rule 1 (program)

    expr  go to state 17
    type  go to state 18
    stmt  go to state 29


state 17

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr
   23 stmt: expr . ';'

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ';'  shift, and go to state 40


state 18

   28 stmt: type . VARIABLE ';'

    VARIABLE  shift, and go to state 41


state 19

    3 function: stmt .

    $default  reduce using rule 3 (function)


state 20

   27 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 42


state 21

   29 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 43


state 22

   30 stmt: IF '(' . expr ')' stmt
   31     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 44


state 23

    4 expr: VARIABLE .

    $default  reduce using rule 4 (expr)


state 24

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr
   26 stmt: PRINT expr . ';'

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ';'  shift, and go to state 45


state 25

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | '-' expr .
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 12 (expr)


state 26

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr
   19     | '(' expr . ')'

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ')'  shift, and go to state 46


state 27

    2 function: function . stmt
   24 stmt: '{' function . '}'

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 3
    T_INT     shift, and go to state 4
    T_REAL    shift, and go to state 5
    T_BOOL    shift, and go to state 6
    REAL      shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    ';'       shift, and go to state 13
    '{'       shift, and go to state 14
    '}'       shift, and go to state 47

    expr  go to state 17
    type  go to state 18
    stmt  go to state 29


state 28

    0 $accept: program $end .

    $default  accept


state 29

    2 function: function stmt .

    $default  reduce using rule 2 (function)


state 30

   14 expr: expr '>' . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 48


state 31

   13 expr: expr '<' . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 49


state 32

   17 expr: expr NE . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 50


state 33

   18 expr: expr EQ . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 51


state 34

   16 expr: expr LE . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 52


state 35

   15 expr: expr GE . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 53


state 36

    8 expr: expr '+' . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 54


state 37

    9 expr: expr '-' . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 55


state 38

   10 expr: expr '*' . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 56


state 39

   11 expr: expr '/' . expr

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 23
    REAL      shift, and go to state 7
    '-'       shift, and go to state 11
    '('       shift, and go to state 12

    expr  go to state 57


state 40

   23 stmt: expr ';' .

    $default  reduce using rule 23 (stmt)


state 41

   28 stmt: type VARIABLE . ';'

    ';'  shift, and go to state 58


state 42

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr
   27 stmt: VARIABLE '=' expr . ';'

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ';'  shift, and go to state 59


state 43

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr
   29 stmt: WHILE '(' expr . ')' stmt

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ')'  shift, and go to state 60


state 44

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr
   30 stmt: IF '(' expr . ')' stmt
   31     | IF '(' expr . ')' stmt ELSE stmt

    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    NE   shift, and go to state 32
    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ')'  shift, and go to state 61


state 45

   26 stmt: PRINT expr ';' .

    $default  reduce using rule 26 (stmt)


state 46

   19 expr: '(' expr ')' .

    $default  reduce using rule 19 (expr)


state 47

   24 stmt: '{' function '}' .

    $default  reduce using rule 24 (stmt)


state 48

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   14     | expr '>' expr .
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 14 (expr)


state 49

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   13     | expr '<' expr .
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 13 (expr)


state 50

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   17     | expr NE expr .
   18     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 17 (expr)


state 51

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr
   18     | expr EQ expr .

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 18 (expr)


state 52

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   16     | expr LE expr .
   17     | expr . NE expr
   18     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 16 (expr)


state 53

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   15     | expr GE expr .
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    '+'  shift, and go to state 36
    '-'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 15 (expr)


state 54

    8 expr: expr . '+' expr
    8     | expr '+' expr .
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 8 (expr)


state 55

    8 expr: expr . '+' expr
    9     | expr . '-' expr
    9     | expr '-' expr .
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 9 (expr)


state 56

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   10     | expr '*' expr .
   11     | expr . '/' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    $default  reduce using rule 10 (expr)


state 57

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   11     | expr '/' expr .
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . GE expr
   16     | expr . LE expr
   17     | expr . NE expr
   18     | expr . EQ expr

    $default  reduce using rule 11 (expr)


state 58

   28 stmt: type VARIABLE ';' .

    $default  reduce using rule 28 (stmt)


state 59

   27 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 27 (stmt)


state 60

   29 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 3
    T_INT     shift, and go to state 4
    T_REAL    shift, and go to state 5
    T_BOOL    shift, and go to state 6
    REAL      shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    ';'       shift, and go to state 13
    '{'       shift, and go to state 14

    expr  go to state 17
    type  go to state 18
    stmt  go to state 62


state 61

   30 stmt: IF '(' expr ')' . stmt
   31     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 3
    T_INT     shift, and go to state 4
    T_REAL    shift, and go to state 5
    T_BOOL    shift, and go to state 6
    REAL      shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    ';'       shift, and go to state 13
    '{'       shift, and go to state 14

    expr  go to state 17
    type  go to state 18
    stmt  go to state 63


state 62

   29 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 29 (stmt)


state 63

   30 stmt: IF '(' expr ')' stmt .
   31     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 64

    $default  reduce using rule 30 (stmt)


state 64

   31 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 1
    BOOL      shift, and go to state 2
    VARIABLE  shift, and go to state 3
    T_INT     shift, and go to state 4
    T_REAL    shift, and go to state 5
    T_BOOL    shift, and go to state 6
    REAL      shift, and go to state 7
    WHILE     shift, and go to state 8
    IF        shift, and go to state 9
    PRINT     shift, and go to state 10
    '-'       shift, and go to state 11
    '('       shift, and go to state 12
    ';'       shift, and go to state 13
    '{'       shift, and go to state 14

    expr  go to state 17
    type  go to state 18
    stmt  go to state 65


state 65

   31 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 31 (stmt)
