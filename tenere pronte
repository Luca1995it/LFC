//tmp=NULL;
                        //tmp0=ex(p->opr.op[0]);
                        //tmp1=ex(p->opr.op[1]);

                        /*

                        if((tmp0->type==t_int)&&(tmp1->type==t_int)){
                                tmp->type=t_int;
                        } 

                        if((tmp0->type==t_real)&&(tmp1->type==t_real)){
                                tmp->type=t_real;
                        }

                        if((tmp0->type==t_bool)&&(tmp1->type==t_bool)){
                                tmp->type=t_bool;
                        }

                        if((tmp0->type==t_int)&&(tmp1->type==t_real)){
                                tmp->type=t_real;
                        }

                        if((tmp0->type==t_int)&&(tmp1->type==t_bool)){
                                yyerror("tipi non compatibili");
                        }

                        if((tmp0->type==t_real)&&(tmp1->type==t_bool)){
                                yyerror("tipi non compatibili");
                        }

                         switch(tmp->type){
                            case (t_int):  tmp->ivalue=-tmp->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=-tmp->bvalue;
                            break;
                            case (t_real): tmp->rvalue=-tmp->rvalue;
                            break;}
                        
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue+tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue+tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue+tmp1->rvalue;
                            break;
                        }
                        case'-':
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue-tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue-tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue-tmp1->rvalue;
                            break;
                        }
                        case'*':
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue*tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue*tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue*tmp1->rvalue;
                            break;
                        }
                        case'/':
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue/tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue/tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue/tmp1->rvalue;
                            break;
                        }
                        case'<':
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue<tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue<tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue<tmp1->rvalue;
                            break;
                        }
                        case'>':
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue>tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue>tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue>tmp1->rvalue;
                            break;
                        }
                        case GE:
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue>=tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue>=tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue>=tmp1->rvalue;
                            break;
                        }
                        case LE:
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue<=tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue<=tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue<=tmp1->rvalue;
                            break;
                        }
                        case NE:
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue!=tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue!=tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue!=tmp1->rvalue;
                            break;
                        }
                        case EQ:
                            switch(tmp->type){
                            case (t_int):  tmp->ivalue=tmp0->ivalue==tmp1->ivalue;
                            break;
                            case (t_bool): tmp->bvalue=tmp0->bvalue==tmp1->bvalue;
                            break;
                            case (t_real): tmp->rvalue=tmp0->rvalue==tmp1->rvalue;
                            break;